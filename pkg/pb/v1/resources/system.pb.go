// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/v1/resources/system.proto

package resources

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type System struct {
	Created              *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created" csv:"created" yaml:"created"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated" csv:"updated" yaml:"updated"`
	LastSeen             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen" csv:"last_seen" yaml:"last_seen"`
	Hostname             string               `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname" csv:"hostname" yaml:"hostname"`
	Address              string               `protobuf:"bytes,5,opt,name=address,proto3" json:"address" csv:"address" yaml:"address"`
	Manufacturer         string               `protobuf:"bytes,6,opt,name=manufacturer,proto3" json:"manufacturer" csv:"manufacturer" yaml:"manufacturer"`
	Product              string               `protobuf:"bytes,7,opt,name=product,proto3" json:"product" csv:"product" yaml:"product"`
	ProductVersion       string               `protobuf:"bytes,8,opt,name=product_version,json=productVersion,proto3" json:"product_version" csv:"product_version" yaml:"product_version"`
	SerialNumber         string               `protobuf:"bytes,9,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number" csv:"serial_number" yaml:"serial_number"`
	BiosVendor           string               `protobuf:"bytes,10,opt,name=bios_vendor,json=biosVendor,proto3" json:"bios_vendor" csv:"bios_vendor" yaml:"bios_vendor"`
	BiosDate             string               `protobuf:"bytes,11,opt,name=bios_date,json=biosDate,proto3" json:"bios_date" csv:"bios_date" yaml:"bios_date"`
	BiosVersion          string               `protobuf:"bytes,12,opt,name=bios_version,json=biosVersion,proto3" json:"bios_version" csv:"bios_version" yaml:"bios_version"`
	BootRomVersion       string               `protobuf:"bytes,13,opt,name=boot_rom_version,json=bootRomVersion,proto3" json:"boot_rom_version" csv:"boot_rom_version" yaml:"boot_rom_version"`
	SmcVersion           string               `protobuf:"bytes,14,opt,name=smc_version,json=smcVersion,proto3" json:"smc_version" csv:"smc_version" yaml:"smc_version"`
	MemoryGb             int32                `protobuf:"varint,15,opt,name=memory_gb,json=memoryGb,proto3" json:"memory_gb" csv:"memory_gb" yaml:"memory_gb"`
	CpuCoresPerSocket    int32                `protobuf:"varint,16,opt,name=cpu_cores_per_socket,json=cpuCoresPerSocket,proto3" json:"cpu_cores_per_socket" csv:"cpu_cores_per_socket" yaml:"cpu_cores_per_socket"`
	CpuPhysicalCores     int32                `protobuf:"varint,17,opt,name=cpu_physical_cores,json=cpuPhysicalCores,proto3" json:"cpu_physical_cores" csv:"cpu_physical_cores" yaml:"cpu_physical_cores"`
	CpuLogicalCores      int32                `protobuf:"varint,18,opt,name=cpu_logical_cores,json=cpuLogicalCores,proto3" json:"cpu_logical_cores" csv:"cpu_logical_cores" yaml:"cpu_logical_cores"`
	CpuSockets           int32                `protobuf:"varint,19,opt,name=cpu_sockets,json=cpuSockets,proto3" json:"cpu_sockets" csv:"cpu_sockets" yaml:"cpu_sockets"`
	CpuThreadsPerCore    int32                `protobuf:"varint,20,opt,name=cpu_threads_per_core,json=cpuThreadsPerCore,proto3" json:"cpu_threads_per_core" csv:"cpu_threads_per_core" yaml:"cpu_threads_per_core"`
	CpuModel             string               `protobuf:"bytes,21,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model" csv:"cpu_model" yaml:"cpu_model"`
	CpuFlags             string               `protobuf:"bytes,22,opt,name=cpu_flags,json=cpuFlags,proto3" json:"cpu_flags" csv:"cpu_flags" yaml:"cpu_flags"`
	Os                   string               `protobuf:"bytes,23,opt,name=os,proto3" json:"os" csv:"os" yaml:"os"`
	OsVersion            string               `protobuf:"bytes,24,opt,name=os_version,json=osVersion,proto3" json:"os_version" csv:"os_version" yaml:"os_version"`
	OsBuild              string               `protobuf:"bytes,25,opt,name=os_build,json=osBuild,proto3" json:"os_build" csv:"os_build" yaml:"os_build"`
	OsDescr              string               `protobuf:"bytes,26,opt,name=os_descr,json=osDescr,proto3" json:"os_descr" csv:"os_descr" yaml:"os_descr"`
	Kernel               string               `protobuf:"bytes,27,opt,name=kernel,proto3" json:"kernel" csv:"kernel" yaml:"kernel"`
	KernelVersion        string               `protobuf:"bytes,28,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version" csv:"kernel_version" yaml:"kernel_version"`
	KernelRelease        string               `protobuf:"bytes,29,opt,name=kernel_release,json=kernelRelease,proto3" json:"kernel_release" csv:"kernel_release" yaml:"kernel_release"`
	Description          string               `protobuf:"bytes,30,opt,name=description,proto3" json:"description" csv:"description" yaml:"description"`
	Site                 string               `protobuf:"bytes,31,opt,name=site,proto3" json:"site" csv:"site" yaml:"site"`
	Rack                 string               `protobuf:"bytes,32,opt,name=rack,proto3" json:"rack" csv:"rack" yaml:"rack"`
	RackPosition         int32                `protobuf:"varint,33,opt,name=rack_position,json=rackPosition,proto3" json:"rack_position" csv:"rack_position" yaml:"rack_position"`
	RackHeight           int32                `protobuf:"varint,34,opt,name=rack_height,json=rackHeight,proto3" json:"rack_height" csv:"rack_height" yaml:"rack_height"`
	Vm                   bool                 `protobuf:"varint,35,opt,name=vm,proto3" json:"vm" csv:"vm" yaml:"vm"`
	VmServer             string               `protobuf:"bytes,36,opt,name=vm_server,json=vmServer,proto3" json:"vm_server" csv:"vm_server" yaml:"vm_server"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte               `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32                `json:"-" csv:"-" yaml:"-"`
}

func (m *System) Reset()         { *m = System{} }
func (m *System) String() string { return proto.CompactTextString(m) }
func (*System) ProtoMessage()    {}
func (*System) Descriptor() ([]byte, []int) {
	return fileDescriptor_305b7271e13f18dc, []int{0}
}

func (m *System) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_System.Unmarshal(m, b)
}
func (m *System) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_System.Marshal(b, m, deterministic)
}
func (m *System) XXX_Merge(src proto.Message) {
	xxx_messageInfo_System.Merge(m, src)
}
func (m *System) XXX_Size() int {
	return xxx_messageInfo_System.Size(m)
}
func (m *System) XXX_DiscardUnknown() {
	xxx_messageInfo_System.DiscardUnknown(m)
}

var xxx_messageInfo_System proto.InternalMessageInfo

func (m *System) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *System) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *System) GetLastSeen() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeen
	}
	return nil
}

func (m *System) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *System) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *System) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *System) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *System) GetProductVersion() string {
	if m != nil {
		return m.ProductVersion
	}
	return ""
}

func (m *System) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *System) GetBiosVendor() string {
	if m != nil {
		return m.BiosVendor
	}
	return ""
}

func (m *System) GetBiosDate() string {
	if m != nil {
		return m.BiosDate
	}
	return ""
}

func (m *System) GetBiosVersion() string {
	if m != nil {
		return m.BiosVersion
	}
	return ""
}

func (m *System) GetBootRomVersion() string {
	if m != nil {
		return m.BootRomVersion
	}
	return ""
}

func (m *System) GetSmcVersion() string {
	if m != nil {
		return m.SmcVersion
	}
	return ""
}

func (m *System) GetMemoryGb() int32 {
	if m != nil {
		return m.MemoryGb
	}
	return 0
}

func (m *System) GetCpuCoresPerSocket() int32 {
	if m != nil {
		return m.CpuCoresPerSocket
	}
	return 0
}

func (m *System) GetCpuPhysicalCores() int32 {
	if m != nil {
		return m.CpuPhysicalCores
	}
	return 0
}

func (m *System) GetCpuLogicalCores() int32 {
	if m != nil {
		return m.CpuLogicalCores
	}
	return 0
}

func (m *System) GetCpuSockets() int32 {
	if m != nil {
		return m.CpuSockets
	}
	return 0
}

func (m *System) GetCpuThreadsPerCore() int32 {
	if m != nil {
		return m.CpuThreadsPerCore
	}
	return 0
}

func (m *System) GetCpuModel() string {
	if m != nil {
		return m.CpuModel
	}
	return ""
}

func (m *System) GetCpuFlags() string {
	if m != nil {
		return m.CpuFlags
	}
	return ""
}

func (m *System) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *System) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *System) GetOsBuild() string {
	if m != nil {
		return m.OsBuild
	}
	return ""
}

func (m *System) GetOsDescr() string {
	if m != nil {
		return m.OsDescr
	}
	return ""
}

func (m *System) GetKernel() string {
	if m != nil {
		return m.Kernel
	}
	return ""
}

func (m *System) GetKernelVersion() string {
	if m != nil {
		return m.KernelVersion
	}
	return ""
}

func (m *System) GetKernelRelease() string {
	if m != nil {
		return m.KernelRelease
	}
	return ""
}

func (m *System) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *System) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *System) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *System) GetRackPosition() int32 {
	if m != nil {
		return m.RackPosition
	}
	return 0
}

func (m *System) GetRackHeight() int32 {
	if m != nil {
		return m.RackHeight
	}
	return 0
}

func (m *System) GetVm() bool {
	if m != nil {
		return m.Vm
	}
	return false
}

func (m *System) GetVmServer() string {
	if m != nil {
		return m.VmServer
	}
	return ""
}

func init() {
	proto.RegisterType((*System)(nil), "peekaboo.v1.resources.System")
}

func init() { proto.RegisterFile("pb/v1/resources/system.proto", fileDescriptor_305b7271e13f18dc) }

var fileDescriptor_305b7271e13f18dc = []byte{
	// 729 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xc1, 0x4f, 0x1b, 0x39,
	0x14, 0xc6, 0x95, 0x2c, 0x84, 0xc4, 0x09, 0x01, 0xbc, 0xc0, 0x9a, 0x00, 0x9b, 0x00, 0xbb, 0xda,
	0x68, 0xb5, 0x9b, 0x11, 0x6d, 0xa5, 0x1e, 0x7a, 0xa8, 0x4a, 0x51, 0xdb, 0x43, 0x5b, 0x45, 0x09,
	0xe2, 0xd0, 0xcb, 0xc8, 0xe3, 0x79, 0x4c, 0x46, 0x19, 0x8f, 0x2d, 0xdb, 0x33, 0x12, 0x7f, 0x69,
	0xff, 0x9d, 0xca, 0xf6, 0xcc, 0x90, 0xf6, 0xc2, 0x29, 0x7e, 0xdf, 0xf7, 0xfb, 0xec, 0x37, 0xf3,
	0x26, 0x46, 0x67, 0x32, 0x0a, 0xca, 0xeb, 0x40, 0x81, 0x16, 0x85, 0x62, 0xa0, 0x03, 0xfd, 0xa8,
	0x0d, 0xf0, 0x99, 0x54, 0xc2, 0x08, 0x7c, 0x24, 0x01, 0xd6, 0x34, 0x12, 0x62, 0x56, 0x5e, 0xcf,
	0x1a, 0x66, 0x34, 0x4e, 0x84, 0x48, 0x32, 0x08, 0x1c, 0x14, 0x15, 0x0f, 0x81, 0x49, 0x39, 0x68,
	0x43, 0xb9, 0xf4, 0xb9, 0xcb, 0xef, 0x3d, 0xd4, 0x59, 0xba, 0x8d, 0xf0, 0x2b, 0xb4, 0xc3, 0x14,
	0x50, 0x03, 0x31, 0x69, 0x4d, 0x5a, 0xd3, 0xfe, 0x8b, 0xd1, 0xcc, 0xa7, 0x67, 0x75, 0x7a, 0x76,
	0x57, 0xa7, 0x17, 0x35, 0x6a, 0x53, 0x85, 0x8c, 0x5d, 0xaa, 0xfd, 0x7c, 0xaa, 0x42, 0xf1, 0x6b,
	0xd4, 0xcb, 0xa8, 0x36, 0xa1, 0x06, 0xc8, 0xc9, 0x6f, 0xcf, 0xe6, 0xba, 0x16, 0x5e, 0x02, 0xe4,
	0x78, 0x84, 0xba, 0x2b, 0xa1, 0x4d, 0x4e, 0x39, 0x90, 0xad, 0x49, 0x6b, 0xda, 0x5b, 0x34, 0x35,
	0x26, 0x68, 0x87, 0xc6, 0xb1, 0x02, 0xad, 0xc9, 0xb6, 0xb3, 0xea, 0x12, 0x5f, 0xa2, 0x01, 0xa7,
	0x79, 0xf1, 0x40, 0x99, 0x29, 0x14, 0x28, 0xd2, 0x71, 0xf6, 0x4f, 0x9a, 0x4d, 0x4b, 0x25, 0xe2,
	0x82, 0x19, 0xb2, 0xe3, 0xd3, 0x55, 0x89, 0xff, 0x41, 0x7b, 0xd5, 0x32, 0x2c, 0x41, 0xe9, 0x54,
	0xe4, 0xa4, 0xeb, 0x88, 0x61, 0x25, 0xdf, 0x7b, 0x15, 0x5f, 0xa1, 0x5d, 0x0d, 0x2a, 0xa5, 0x59,
	0x98, 0x17, 0x3c, 0x02, 0x45, 0x7a, 0xfe, 0x1c, 0x2f, 0x7e, 0x75, 0x1a, 0x1e, 0xa3, 0x7e, 0x94,
	0x0a, 0x1d, 0x96, 0x90, 0xc7, 0x42, 0x11, 0xe4, 0x10, 0x64, 0xa5, 0x7b, 0xa7, 0xe0, 0x53, 0xd4,
	0x73, 0x80, 0x7d, 0x53, 0xa4, 0xef, 0x9f, 0xd1, 0x0a, 0xb7, 0xd4, 0x00, 0xbe, 0x40, 0x83, 0x2a,
	0xed, 0x1b, 0x19, 0x38, 0xbf, 0xef, 0xe3, 0xbe, 0x8b, 0x29, 0xda, 0x8f, 0x84, 0x30, 0xa1, 0x12,
	0xbc, 0xc1, 0x76, 0x7d, 0xbf, 0x56, 0x5f, 0x08, 0x5e, 0x93, 0x63, 0xd4, 0xd7, 0x9c, 0x35, 0xd0,
	0xd0, 0xb7, 0xa2, 0x39, 0xab, 0x81, 0x53, 0xd4, 0xe3, 0xc0, 0x85, 0x7a, 0x0c, 0x93, 0x88, 0xec,
	0x4d, 0x5a, 0xd3, 0xed, 0x45, 0xd7, 0x0b, 0x1f, 0x23, 0x1c, 0xa0, 0x43, 0x26, 0x8b, 0x90, 0x09,
	0x05, 0x3a, 0x94, 0xa0, 0x42, 0x2d, 0xd8, 0x1a, 0x0c, 0xd9, 0x77, 0xdc, 0x01, 0x93, 0xc5, 0x7b,
	0x6b, 0xcd, 0x41, 0x2d, 0x9d, 0x81, 0xff, 0x43, 0xd8, 0x06, 0xe4, 0xea, 0x51, 0xa7, 0x8c, 0x66,
	0x3e, 0x49, 0x0e, 0x1c, 0xbe, 0xcf, 0x64, 0x31, 0xaf, 0x0c, 0x17, 0xc3, 0xff, 0x22, 0xbb, 0x45,
	0x98, 0x89, 0x64, 0x03, 0xc6, 0x0e, 0xde, 0x63, 0xb2, 0xf8, 0xec, 0x75, 0xcf, 0x8e, 0x51, 0xdf,
	0xb2, 0xbe, 0x01, 0x4d, 0x7e, 0x77, 0x14, 0x62, 0xb2, 0xf0, 0x27, 0xeb, 0xba, 0x57, 0xb3, 0x52,
	0x40, 0x63, 0xdf, 0xad, 0xdd, 0x90, 0x1c, 0x36, 0xbd, 0xde, 0x79, 0x6b, 0x0e, 0xca, 0x6e, 0x69,
	0x9f, 0xdc, 0x06, 0xb8, 0x88, 0x21, 0x23, 0x47, 0x7e, 0x08, 0x4c, 0x16, 0x5f, 0x6c, 0x5d, 0x9b,
	0x0f, 0x19, 0x4d, 0x34, 0x39, 0x6e, 0xcc, 0x0f, 0xb6, 0xc6, 0x43, 0xd4, 0x16, 0x9a, 0xfc, 0xe1,
	0xd4, 0xb6, 0xd0, 0xf8, 0x1c, 0xa1, 0x8d, 0x79, 0x11, 0xa7, 0xf7, 0x9e, 0xa6, 0x75, 0x82, 0xba,
	0x42, 0x87, 0x51, 0x91, 0x66, 0x31, 0x39, 0xf1, 0xdf, 0x9d, 0xd0, 0x37, 0xb6, 0xac, 0xac, 0x18,
	0x34, 0x53, 0x64, 0x54, 0x5b, 0xb7, 0xb6, 0xc4, 0xc7, 0xa8, 0xb3, 0x06, 0x95, 0x43, 0x46, 0x4e,
	0x9d, 0x51, 0x55, 0xf8, 0x6f, 0x34, 0xf4, 0xab, 0xe6, 0xc0, 0x33, 0xe7, 0xef, 0x7a, 0xb5, 0x3e,
	0xf4, 0x09, 0x53, 0x90, 0x01, 0xd5, 0x40, 0xce, 0x37, 0xb1, 0x85, 0x17, 0xf1, 0x04, 0xf5, 0xdd,
	0xe9, 0xa9, 0x34, 0x76, 0xab, 0x3f, 0xfd, 0xb7, 0xb6, 0x21, 0x61, 0x8c, 0xb6, 0x74, 0x6a, 0x80,
	0x8c, 0x9d, 0xe5, 0xd6, 0x56, 0x53, 0x94, 0xad, 0xc9, 0xc4, 0x6b, 0x76, 0x6d, 0xff, 0x19, 0xf6,
	0x37, 0x94, 0x42, 0xa7, 0x6e, 0xaf, 0x0b, 0xf7, 0xe2, 0x07, 0x56, 0x9c, 0x57, 0x9a, 0x9d, 0xa2,
	0x83, 0x56, 0x90, 0x26, 0x2b, 0x43, 0x2e, 0xfd, 0x14, 0xad, 0xf4, 0xc9, 0x29, 0xf6, 0xd5, 0x96,
	0x9c, 0x5c, 0x4d, 0x5a, 0xd3, 0xee, 0xa2, 0x5d, 0x72, 0x3b, 0x87, 0x92, 0x87, 0x1a, 0x54, 0x09,
	0x8a, 0xfc, 0xe5, 0xe7, 0x50, 0xf2, 0xa5, 0xab, 0x6f, 0xde, 0x7d, 0x7b, 0x9b, 0xa4, 0x66, 0x55,
	0x44, 0x33, 0x26, 0x78, 0x50, 0x5f, 0x8f, 0xff, 0x67, 0x34, 0xd2, 0x4d, 0x15, 0xc8, 0x75, 0x12,
	0xfc, 0x72, 0xaf, 0xbe, 0x69, 0x56, 0x51, 0xc7, 0x5d, 0x45, 0x2f, 0x7f, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xee, 0x42, 0x3f, 0x54, 0x7b, 0x05, 0x00, 0x00,
}
