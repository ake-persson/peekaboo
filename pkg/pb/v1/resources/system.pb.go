// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: pb/v1/resources/system.proto

package resources

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created" csv:"created" yaml:"created"`
	Updated           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated" csv:"updated" yaml:"updated"`
	LastSeen          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen" csv:"last_seen" yaml:"last_seen"`
	Hostname          string                 `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname" csv:"hostname" yaml:"hostname"`
	Address           string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address" csv:"address" yaml:"address"`
	Manufacturer      string                 `protobuf:"bytes,6,opt,name=manufacturer,proto3" json:"manufacturer" csv:"manufacturer" yaml:"manufacturer"`
	Product           string                 `protobuf:"bytes,7,opt,name=product,proto3" json:"product" csv:"product" yaml:"product"`
	ProductVersion    string                 `protobuf:"bytes,8,opt,name=product_version,json=productVersion,proto3" json:"product_version" csv:"product_version" yaml:"product_version"`
	SerialNumber      string                 `protobuf:"bytes,9,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number" csv:"serial_number" yaml:"serial_number"`
	BiosVendor        string                 `protobuf:"bytes,10,opt,name=bios_vendor,json=biosVendor,proto3" json:"bios_vendor" csv:"bios_vendor" yaml:"bios_vendor"`               // Only PC
	BiosDate          string                 `protobuf:"bytes,11,opt,name=bios_date,json=biosDate,proto3" json:"bios_date" csv:"bios_date" yaml:"bios_date"`                     // Only PC
	BiosVersion       string                 `protobuf:"bytes,12,opt,name=bios_version,json=biosVersion,proto3" json:"bios_version" csv:"bios_version" yaml:"bios_version"`            // Only PC
	BootRomVersion    string                 `protobuf:"bytes,13,opt,name=boot_rom_version,json=bootRomVersion,proto3" json:"boot_rom_version" csv:"boot_rom_version" yaml:"boot_rom_version"` // Only Apple
	SmcVersion        string                 `protobuf:"bytes,14,opt,name=smc_version,json=smcVersion,proto3" json:"smc_version" csv:"smc_version" yaml:"smc_version"`               // Only Apple
	MemoryGb          int32                  `protobuf:"varint,15,opt,name=memory_gb,json=memoryGb,proto3" json:"memory_gb" csv:"memory_gb" yaml:"memory_gb"`
	CpuCoresPerSocket int32                  `protobuf:"varint,16,opt,name=cpu_cores_per_socket,json=cpuCoresPerSocket,proto3" json:"cpu_cores_per_socket" csv:"cpu_cores_per_socket" yaml:"cpu_cores_per_socket"`
	CpuPhysicalCores  int32                  `protobuf:"varint,17,opt,name=cpu_physical_cores,json=cpuPhysicalCores,proto3" json:"cpu_physical_cores" csv:"cpu_physical_cores" yaml:"cpu_physical_cores"`
	CpuLogicalCores   int32                  `protobuf:"varint,18,opt,name=cpu_logical_cores,json=cpuLogicalCores,proto3" json:"cpu_logical_cores" csv:"cpu_logical_cores" yaml:"cpu_logical_cores"`
	CpuSockets        int32                  `protobuf:"varint,19,opt,name=cpu_sockets,json=cpuSockets,proto3" json:"cpu_sockets" csv:"cpu_sockets" yaml:"cpu_sockets"`
	CpuThreadsPerCore int32                  `protobuf:"varint,20,opt,name=cpu_threads_per_core,json=cpuThreadsPerCore,proto3" json:"cpu_threads_per_core" csv:"cpu_threads_per_core" yaml:"cpu_threads_per_core"`
	CpuModel          string                 `protobuf:"bytes,21,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model" csv:"cpu_model" yaml:"cpu_model"`
	CpuFlags          string                 `protobuf:"bytes,22,opt,name=cpu_flags,json=cpuFlags,proto3" json:"cpu_flags" csv:"cpu_flags" yaml:"cpu_flags"`
	Os                string                 `protobuf:"bytes,23,opt,name=os,proto3" json:"os" csv:"os" yaml:"os"`
	OsVersion         string                 `protobuf:"bytes,24,opt,name=os_version,json=osVersion,proto3" json:"os_version" csv:"os_version" yaml:"os_version"`
	OsBuild           string                 `protobuf:"bytes,25,opt,name=os_build,json=osBuild,proto3" json:"os_build" csv:"os_build" yaml:"os_build"`
	OsDescr           string                 `protobuf:"bytes,26,opt,name=os_descr,json=osDescr,proto3" json:"os_descr" csv:"os_descr" yaml:"os_descr"`
	Kernel            string                 `protobuf:"bytes,27,opt,name=kernel,proto3" json:"kernel" csv:"kernel" yaml:"kernel"`
	KernelVersion     string                 `protobuf:"bytes,28,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version" csv:"kernel_version" yaml:"kernel_version"`
	KernelRelease     string                 `protobuf:"bytes,29,opt,name=kernel_release,json=kernelRelease,proto3" json:"kernel_release" csv:"kernel_release" yaml:"kernel_release"`
	Description       string                 `protobuf:"bytes,30,opt,name=description,proto3" json:"description" csv:"description" yaml:"description"`
	Site              string                 `protobuf:"bytes,31,opt,name=site,proto3" json:"site" csv:"site" yaml:"site"`
	Rack              string                 `protobuf:"bytes,32,opt,name=rack,proto3" json:"rack" csv:"rack" yaml:"rack"`
	RackPosition      int32                  `protobuf:"varint,33,opt,name=rack_position,json=rackPosition,proto3" json:"rack_position" csv:"rack_position" yaml:"rack_position"`
	RackHeight        int32                  `protobuf:"varint,34,opt,name=rack_height,json=rackHeight,proto3" json:"rack_height" csv:"rack_height" yaml:"rack_height"`
	Vm                bool                   `protobuf:"varint,35,opt,name=vm,proto3" json:"vm" csv:"vm" yaml:"vm"`
	VmServer          string                 `protobuf:"bytes,36,opt,name=vm_server,json=vmServer,proto3" json:"vm_server" csv:"vm_server" yaml:"vm_server"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_v1_resources_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_pb_v1_resources_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_pb_v1_resources_system_proto_rawDescGZIP(), []int{0}
}

func (x *System) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *System) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *System) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *System) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *System) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *System) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *System) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *System) GetProductVersion() string {
	if x != nil {
		return x.ProductVersion
	}
	return ""
}

func (x *System) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *System) GetBiosVendor() string {
	if x != nil {
		return x.BiosVendor
	}
	return ""
}

func (x *System) GetBiosDate() string {
	if x != nil {
		return x.BiosDate
	}
	return ""
}

func (x *System) GetBiosVersion() string {
	if x != nil {
		return x.BiosVersion
	}
	return ""
}

func (x *System) GetBootRomVersion() string {
	if x != nil {
		return x.BootRomVersion
	}
	return ""
}

func (x *System) GetSmcVersion() string {
	if x != nil {
		return x.SmcVersion
	}
	return ""
}

func (x *System) GetMemoryGb() int32 {
	if x != nil {
		return x.MemoryGb
	}
	return 0
}

func (x *System) GetCpuCoresPerSocket() int32 {
	if x != nil {
		return x.CpuCoresPerSocket
	}
	return 0
}

func (x *System) GetCpuPhysicalCores() int32 {
	if x != nil {
		return x.CpuPhysicalCores
	}
	return 0
}

func (x *System) GetCpuLogicalCores() int32 {
	if x != nil {
		return x.CpuLogicalCores
	}
	return 0
}

func (x *System) GetCpuSockets() int32 {
	if x != nil {
		return x.CpuSockets
	}
	return 0
}

func (x *System) GetCpuThreadsPerCore() int32 {
	if x != nil {
		return x.CpuThreadsPerCore
	}
	return 0
}

func (x *System) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *System) GetCpuFlags() string {
	if x != nil {
		return x.CpuFlags
	}
	return ""
}

func (x *System) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *System) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *System) GetOsBuild() string {
	if x != nil {
		return x.OsBuild
	}
	return ""
}

func (x *System) GetOsDescr() string {
	if x != nil {
		return x.OsDescr
	}
	return ""
}

func (x *System) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *System) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *System) GetKernelRelease() string {
	if x != nil {
		return x.KernelRelease
	}
	return ""
}

func (x *System) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *System) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *System) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *System) GetRackPosition() int32 {
	if x != nil {
		return x.RackPosition
	}
	return 0
}

func (x *System) GetRackHeight() int32 {
	if x != nil {
		return x.RackHeight
	}
	return 0
}

func (x *System) GetVm() bool {
	if x != nil {
		return x.Vm
	}
	return false
}

func (x *System) GetVmServer() string {
	if x != nil {
		return x.VmServer
	}
	return ""
}

var File_pb_v1_resources_system_proto protoreflect.FileDescriptor

var file_pb_v1_resources_system_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x70, 0x65, 0x65, 0x6b, 0x61, 0x62, 0x6f, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x09, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6f, 0x73,
	0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x69, 0x6f, 0x73, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6f,
	0x73, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x6f, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69,
	0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6f, 0x6f,
	0x74, 0x5f, 0x72, 0x6f, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6d, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6d, 0x63, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x67,
	0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x47,
	0x62, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x63, 0x70, 0x75, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x70, 0x75,
	0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x70, 0x75, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a,
	0x14, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x70, 0x75,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x70, 0x75, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x73, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63,
	0x6b, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x61, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x76, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6b, 0x65, 0x2d, 0x70, 0x65, 0x72, 0x73, 0x73, 0x6f, 0x6e, 0x2f, 0x70, 0x65, 0x65, 0x6b, 0x61,
	0x62, 0x6f, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_v1_resources_system_proto_rawDescOnce sync.Once
	file_pb_v1_resources_system_proto_rawDescData = file_pb_v1_resources_system_proto_rawDesc
)

func file_pb_v1_resources_system_proto_rawDescGZIP() []byte {
	file_pb_v1_resources_system_proto_rawDescOnce.Do(func() {
		file_pb_v1_resources_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_v1_resources_system_proto_rawDescData)
	})
	return file_pb_v1_resources_system_proto_rawDescData
}

var file_pb_v1_resources_system_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pb_v1_resources_system_proto_goTypes = []interface{}{
	(*System)(nil),                // 0: peekaboo.v1.resources.System
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pb_v1_resources_system_proto_depIdxs = []int32{
	1, // 0: peekaboo.v1.resources.System.created:type_name -> google.protobuf.Timestamp
	1, // 1: peekaboo.v1.resources.System.updated:type_name -> google.protobuf.Timestamp
	1, // 2: peekaboo.v1.resources.System.last_seen:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pb_v1_resources_system_proto_init() }
func file_pb_v1_resources_system_proto_init() {
	if File_pb_v1_resources_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_v1_resources_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_v1_resources_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_v1_resources_system_proto_goTypes,
		DependencyIndexes: file_pb_v1_resources_system_proto_depIdxs,
		MessageInfos:      file_pb_v1_resources_system_proto_msgTypes,
	}.Build()
	File_pb_v1_resources_system_proto = out.File
	file_pb_v1_resources_system_proto_rawDesc = nil
	file_pb_v1_resources_system_proto_goTypes = nil
	file_pb_v1_resources_system_proto_depIdxs = nil
}
