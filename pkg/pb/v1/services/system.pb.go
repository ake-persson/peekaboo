// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/v1/services/system.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	resources "github.com/peekaboo-labs/peekaboo/pkg/pb/v1/resources"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetSystemRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" csv:"-" yaml:"-"`
}

func (m *GetSystemRequest) Reset()         { *m = GetSystemRequest{} }
func (m *GetSystemRequest) String() string { return proto.CompactTextString(m) }
func (*GetSystemRequest) ProtoMessage()    {}
func (*GetSystemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{0}
}

func (m *GetSystemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemRequest.Unmarshal(m, b)
}
func (m *GetSystemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemRequest.Marshal(b, m, deterministic)
}
func (m *GetSystemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemRequest.Merge(m, src)
}
func (m *GetSystemRequest) XXX_Size() int {
	return xxx_messageInfo_GetSystemRequest.Size(m)
}
func (m *GetSystemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemRequest proto.InternalMessageInfo

type ListUsersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" csv:"-" yaml:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{1}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

type ListUsersResponse struct {
	Hostname             string            `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname" csv:"Hostname" yaml:"Hostname"`
	Users                []*resources.User `protobuf:"bytes,2,rep,name=users,proto3" json:"users" csv:"users" yaml:"users"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte            `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32             `json:"-" csv:"-" yaml:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{2}
}

func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (m *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(m, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *ListUsersResponse) GetUsers() []*resources.User {
	if m != nil {
		return m.Users
	}
	return nil
}

type ListGroupsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" csv:"-" yaml:"-"`
}

func (m *ListGroupsRequest) Reset()         { *m = ListGroupsRequest{} }
func (m *ListGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListGroupsRequest) ProtoMessage()    {}
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{3}
}

func (m *ListGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsRequest.Unmarshal(m, b)
}
func (m *ListGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsRequest.Marshal(b, m, deterministic)
}
func (m *ListGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsRequest.Merge(m, src)
}
func (m *ListGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_ListGroupsRequest.Size(m)
}
func (m *ListGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsRequest proto.InternalMessageInfo

type ListGroupsResponse struct {
	Hostname             string             `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname" csv:"Hostname" yaml:"Hostname"`
	Groups               []*resources.Group `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups" csv:"groups" yaml:"groups"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte             `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32              `json:"-" csv:"-" yaml:"-"`
}

func (m *ListGroupsResponse) Reset()         { *m = ListGroupsResponse{} }
func (m *ListGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListGroupsResponse) ProtoMessage()    {}
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{4}
}

func (m *ListGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsResponse.Unmarshal(m, b)
}
func (m *ListGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsResponse.Marshal(b, m, deterministic)
}
func (m *ListGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsResponse.Merge(m, src)
}
func (m *ListGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_ListGroupsResponse.Size(m)
}
func (m *ListGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsResponse proto.InternalMessageInfo

func (m *ListGroupsResponse) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *ListGroupsResponse) GetGroups() []*resources.Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type ListFilesystemsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte   `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32    `json:"-" csv:"-" yaml:"-"`
}

func (m *ListFilesystemsRequest) Reset()         { *m = ListFilesystemsRequest{} }
func (m *ListFilesystemsRequest) String() string { return proto.CompactTextString(m) }
func (*ListFilesystemsRequest) ProtoMessage()    {}
func (*ListFilesystemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{5}
}

func (m *ListFilesystemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesystemsRequest.Unmarshal(m, b)
}
func (m *ListFilesystemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesystemsRequest.Marshal(b, m, deterministic)
}
func (m *ListFilesystemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesystemsRequest.Merge(m, src)
}
func (m *ListFilesystemsRequest) XXX_Size() int {
	return xxx_messageInfo_ListFilesystemsRequest.Size(m)
}
func (m *ListFilesystemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesystemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesystemsRequest proto.InternalMessageInfo

type ListFilesystemsResponse struct {
	Hostname             string                  `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname" csv:"Hostname" yaml:"Hostname"`
	Filesystems          []*resources.Filesystem `protobuf:"bytes,2,rep,name=filesystems,proto3" json:"filesystems" csv:"filesystems" yaml:"filesystems"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" csv:"-" yaml:"-"`
	XXX_unrecognized     []byte                  `json:"-" csv:"-" yaml:"-"`
	XXX_sizecache        int32                   `json:"-" csv:"-" yaml:"-"`
}

func (m *ListFilesystemsResponse) Reset()         { *m = ListFilesystemsResponse{} }
func (m *ListFilesystemsResponse) String() string { return proto.CompactTextString(m) }
func (*ListFilesystemsResponse) ProtoMessage()    {}
func (*ListFilesystemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7735c972877c634, []int{6}
}

func (m *ListFilesystemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesystemsResponse.Unmarshal(m, b)
}
func (m *ListFilesystemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesystemsResponse.Marshal(b, m, deterministic)
}
func (m *ListFilesystemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesystemsResponse.Merge(m, src)
}
func (m *ListFilesystemsResponse) XXX_Size() int {
	return xxx_messageInfo_ListFilesystemsResponse.Size(m)
}
func (m *ListFilesystemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesystemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesystemsResponse proto.InternalMessageInfo

func (m *ListFilesystemsResponse) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *ListFilesystemsResponse) GetFilesystems() []*resources.Filesystem {
	if m != nil {
		return m.Filesystems
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSystemRequest)(nil), "peekaboo.v1.services.GetSystemRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "peekaboo.v1.services.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "peekaboo.v1.services.ListUsersResponse")
	proto.RegisterType((*ListGroupsRequest)(nil), "peekaboo.v1.services.ListGroupsRequest")
	proto.RegisterType((*ListGroupsResponse)(nil), "peekaboo.v1.services.ListGroupsResponse")
	proto.RegisterType((*ListFilesystemsRequest)(nil), "peekaboo.v1.services.ListFilesystemsRequest")
	proto.RegisterType((*ListFilesystemsResponse)(nil), "peekaboo.v1.services.ListFilesystemsResponse")
}

func init() { proto.RegisterFile("pb/v1/services/system.proto", fileDescriptor_e7735c972877c634) }

var fileDescriptor_e7735c972877c634 = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcf, 0x4f, 0xea, 0x40,
	0x10, 0x0e, 0x8f, 0x3c, 0xf2, 0x18, 0xf2, 0xa2, 0xae, 0x46, 0xc9, 0x82, 0x09, 0x72, 0x50, 0x0e,
	0xb2, 0x0d, 0xe8, 0xcd, 0x18, 0x13, 0x4d, 0xc4, 0x83, 0xa7, 0x12, 0x2f, 0xc6, 0xc4, 0x50, 0x32,
	0x60, 0xc3, 0x8f, 0xad, 0x9d, 0x2d, 0x89, 0xfe, 0x19, 0xfe, 0xc5, 0xa6, 0xdd, 0x76, 0x29, 0xc5,
	0x0a, 0xb7, 0xee, 0xcc, 0xf7, 0xcd, 0x37, 0x3b, 0xdf, 0x74, 0xa1, 0xe6, 0x39, 0xd6, 0xa2, 0x63,
	0x11, 0xfa, 0x0b, 0x77, 0x88, 0x64, 0xd1, 0x07, 0x29, 0x9c, 0x09, 0xcf, 0x97, 0x4a, 0xb2, 0x03,
	0x0f, 0x71, 0x32, 0x70, 0xa4, 0x14, 0x8b, 0x8e, 0x48, 0x20, 0xbc, 0xa1, 0x29, 0x3e, 0x92, 0x0c,
	0xfc, 0x90, 0x33, 0x72, 0xa7, 0x98, 0xe6, 0xf1, 0x5a, 0x16, 0x31, 0xf6, 0x65, 0xe0, 0xc5, 0xc9,
	0x7a, 0x36, 0xb9, 0x42, 0xe5, 0xd9, 0x6c, 0x40, 0xe8, 0xeb, 0x5c, 0x93, 0xc1, 0x6e, 0x0f, 0x55,
	0x3f, 0x82, 0xdb, 0xf8, 0x1e, 0x20, 0xa9, 0x30, 0xf6, 0xe8, 0x92, 0x7a, 0x22, 0xf4, 0x29, 0x89,
	0x39, 0xb0, 0x97, 0x8a, 0x91, 0x27, 0xe7, 0x84, 0x8c, 0xc3, 0xbf, 0x07, 0x49, 0x6a, 0x3e, 0x98,
	0x61, 0xb5, 0xd0, 0x28, 0xb4, 0xca, 0xb6, 0x39, 0xb3, 0x0e, 0xfc, 0x0d, 0x65, 0xa8, 0xfa, 0xa7,
	0x51, 0x6c, 0x55, 0xba, 0x35, 0x91, 0xbe, 0xb7, 0x69, 0x45, 0x84, 0x05, 0x6d, 0x8d, 0x6c, 0xee,
	0x6b, 0x8d, 0x5e, 0x78, 0x31, 0x23, 0x3c, 0x02, 0x96, 0x0e, 0x6e, 0xa1, 0x7c, 0x09, 0xa5, 0x68,
	0x36, 0x89, 0x74, 0x3d, 0x47, 0x3a, 0x2a, 0x69, 0xc7, 0xd8, 0x66, 0x15, 0x0e, 0x43, 0x9d, 0x7b,
	0x33, 0x77, 0xd3, 0xc1, 0x27, 0x1c, 0xad, 0x65, 0xb6, 0x68, 0xe3, 0x0e, 0x2a, 0x4b, 0x13, 0x93,
	0x5e, 0x4e, 0x72, 0x7a, 0x59, 0x16, 0xb7, 0xd3, 0xac, 0xee, 0x57, 0x11, 0xfe, 0x6b, 0x73, 0xfa,
	0x7a, 0x55, 0x98, 0x0d, 0x65, 0x63, 0x18, 0x3b, 0x15, 0x3f, 0x6d, 0x93, 0xc8, 0x3a, 0xca, 0x8f,
	0x73, 0x64, 0xe3, 0x32, 0x2f, 0x50, 0x36, 0xe6, 0xe6, 0xd5, 0xcc, 0x6e, 0x04, 0x3f, 0xdb, 0x88,
	0x8b, 0x87, 0xf4, 0x0a, 0xb0, 0x74, 0x90, 0xfd, 0x42, 0x5b, 0x31, 0x9e, 0xb7, 0x36, 0x03, 0x63,
	0x81, 0x39, 0xec, 0x64, 0x0c, 0x62, 0xe7, 0xf9, 0xe4, 0x75, 0x87, 0x79, 0x7b, 0x4b, 0xb4, 0xd6,
	0xbb, 0xbd, 0x79, 0xbe, 0x1e, 0xbb, 0xea, 0x2d, 0x70, 0xc4, 0x50, 0xce, 0xac, 0x84, 0xda, 0x9e,
	0x0e, 0x1c, 0x32, 0x27, 0xcb, 0x9b, 0x8c, 0xad, 0xd5, 0x77, 0xe0, 0x2a, 0xf9, 0x70, 0x4a, 0xd1,
	0xbf, 0x77, 0xf1, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x88, 0x4d, 0xa7, 0x13, 0x29, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SystemServiceClient is the client API for SystemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemServiceClient interface {
	GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*resources.System, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	ListGroups(ctx context.Context, in *ListGroupsRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error)
	ListFilesystems(ctx context.Context, in *ListFilesystemsRequest, opts ...grpc.CallOption) (*ListFilesystemsResponse, error)
}

type systemServiceClient struct {
	cc *grpc.ClientConn
}

func NewSystemServiceClient(cc *grpc.ClientConn) SystemServiceClient {
	return &systemServiceClient{cc}
}

func (c *systemServiceClient) GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*resources.System, error) {
	out := new(resources.System)
	err := c.cc.Invoke(ctx, "/peekaboo.v1.services.SystemService/GetSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/peekaboo.v1.services.SystemService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) ListGroups(ctx context.Context, in *ListGroupsRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error) {
	out := new(ListGroupsResponse)
	err := c.cc.Invoke(ctx, "/peekaboo.v1.services.SystemService/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) ListFilesystems(ctx context.Context, in *ListFilesystemsRequest, opts ...grpc.CallOption) (*ListFilesystemsResponse, error) {
	out := new(ListFilesystemsResponse)
	err := c.cc.Invoke(ctx, "/peekaboo.v1.services.SystemService/ListFilesystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemServiceServer is the server API for SystemService service.
type SystemServiceServer interface {
	GetSystem(context.Context, *GetSystemRequest) (*resources.System, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	ListGroups(context.Context, *ListGroupsRequest) (*ListGroupsResponse, error)
	ListFilesystems(context.Context, *ListFilesystemsRequest) (*ListFilesystemsResponse, error)
}

// UnimplementedSystemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSystemServiceServer struct {
}

func (*UnimplementedSystemServiceServer) GetSystem(ctx context.Context, req *GetSystemRequest) (*resources.System, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystem not implemented")
}
func (*UnimplementedSystemServiceServer) ListUsers(ctx context.Context, req *ListUsersRequest) (*ListUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedSystemServiceServer) ListGroups(ctx context.Context, req *ListGroupsRequest) (*ListGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGroups not implemented")
}
func (*UnimplementedSystemServiceServer) ListFilesystems(ctx context.Context, req *ListFilesystemsRequest) (*ListFilesystemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFilesystems not implemented")
}

func RegisterSystemServiceServer(s *grpc.Server, srv SystemServiceServer) {
	s.RegisterService(&_SystemService_serviceDesc, srv)
}

func _SystemService_GetSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).GetSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peekaboo.v1.services.SystemService/GetSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).GetSystem(ctx, req.(*GetSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peekaboo.v1.services.SystemService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peekaboo.v1.services.SystemService/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).ListGroups(ctx, req.(*ListGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_ListFilesystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFilesystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).ListFilesystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peekaboo.v1.services.SystemService/ListFilesystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).ListFilesystems(ctx, req.(*ListFilesystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peekaboo.v1.services.SystemService",
	HandlerType: (*SystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystem",
			Handler:    _SystemService_GetSystem_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _SystemService_ListUsers_Handler,
		},
		{
			MethodName: "ListGroups",
			Handler:    _SystemService_ListGroups_Handler,
		},
		{
			MethodName: "ListFilesystems",
			Handler:    _SystemService_ListFilesystems_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/v1/services/system.proto",
}
